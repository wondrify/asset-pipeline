buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:3.1.1"
    }
}

apply plugin: 'groovy'
apply plugin: 'java-library'

group = 'cloud.wondrify'

sourceCompatibility = '1.17'
targetCompatibility = '1.17'

ext {
    javetVersion = "1.1.0"
    pomDescription = 'Provides SASS Compiling using jsass (libsass) support for the Asset-Pipeline library.'
    pomDevelopers = ['gferon': 'Gabriel FÃ©ron']
}

repositories {
	mavenLocal()
    mavenCentral()
}

configurations {
    provided
}
 
sourceSets {
    main {
        compileClasspath += configurations.provided
    }
    test {
        compileClasspath += configurations.provided
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

apply plugin: 'com.github.node-gradle.node'

dependencies {

    api project(':asset-pipeline-core')

    implementation "com.caoccao.javet:javet-core:$javetVersion"

    compileOnly "org.codehaus.groovy:groovy:$groovy3Version"
    compileOnly "org.slf4j:slf4j-api:$slf4jVersion"

    testImplementation "org.apache.groovy:groovy:$groovy4Version"
    testImplementation "org.spockframework:spock-core:$spockVersion"

    testRuntimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"
    testRuntimeOnly "org.webjars:bootstrap:$bootstrapCssVersion"
}

task copyJavetVersion()  {
    doLast {
        new File("${projectDir}/src/main/resources", "javet-version.txt").text = javetVersion
    }
}

task bundleJSCompiler(type: NpmTask, dependsOn: ['npmInstall']) {
    doFirst {
        mkdir('src/main/resources/js')
    }
    inputs.files(fileTree('src/main/js'), file('webpack.config.js'))
    outputs.file('src/main/resources/js/compiler.js')
    args = ['run', 'bundle']
}

compileGroovy.dependsOn copyJavetVersion, bundleJSCompiler

task(console, dependsOn: 'classes', type: JavaExec) {
  main = 'groovy.ui.Console'
  classpath = sourceSets.main.runtimeClasspath
}

test {
    useJUnitPlatform()
    testLogging {
        events('passed', 'skipped', 'failed')
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

node {
    download = true
    version = "16.13.0"
}

processResources {
    dependsOn bundleJSCompiler
}

sourcesJar {
    dependsOn bundleJSCompiler
}

apply {
    from rootProject.layout.projectDirectory.file('gradle/publish-config.gradle')
}
