buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
	}
}

apply plugin: 'groovy'
apply plugin: 'java-library'

group = 'cloud.wondrify'

sourceCompatibility = '1.17'
targetCompatibility = '1.17'

ext {
	pomDescription = 'JVM Asset Pipeline Servlet Adapter.'
}

repositories {
	mavenCentral()
}

configurations {
	provided
	doc.extendsFrom(runtime)
}

sourceSets {
	main {
		compileClasspath += configurations.provided
		groovy.srcDirs   += ['src/main/java']
		java.srcDirs      = []
	}
}

java {
    withSourcesJar()
    withJavadocJar()
}

dependencies {

	api project(':asset-pipeline-core')

	implementation "org.apache.groovy:groovy:$groovy4Version"

	compileOnlyApi "jakarta.servlet:jakarta.servlet-api:$servletApiVersion"

	testImplementation "org.apache.httpcomponents:fluent-hc:$fluentHcVersion"
	testImplementation "org.apache.httpcomponents:httpcore:$httpcoreVersion"
	testImplementation "junit:junit:$junit4Version"
	testImplementation "org.eclipse.jetty:jetty-server:$jettyVersion"
	testImplementation "org.eclipse.jetty:jetty-servlet:$jettyVersion"
	testImplementation "org.eclipse.jetty:jetty-webapp:$jettyVersion"

	testRuntimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"
}

test {
	testLogging {
		events('passed', 'skipped', 'failed')
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}

task(console, dependsOn: 'classes', type: JavaExec) {
	main = 'groovy.ui.Console'
	classpath = sourceSets.main.runtimeClasspath
}

apply {
	from rootProject.layout.projectDirectory.file('gradle/publish-config.gradle')
}