buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
	}
}

apply plugin: 'groovy'
apply plugin: 'java-library'

group = 'cloud.wondrify'

sourceCompatibility = '1.11'
targetCompatibility = '1.11'

ext {
	pomDescription = 'JVM Asset Pipeline Servlet Adapter.'
}

repositories {
	mavenCentral()
}

configurations {
	provided
	doc.extendsFrom(runtime)
}

sourceSets {
	main {
		compileClasspath += configurations.provided
		groovy.srcDirs   += ['src/main/java']
		java.srcDirs      = []
	}
}

java {
    withSourcesJar()
    withJavadocJar()
}

dependencies {
	implementation    'org.codehaus.groovy:groovy:3.0.20'
	api  project(':asset-pipeline-core')
	api 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	testImplementation 'org.codehaus.groovy:groovy:2.4.19'
    testImplementation 'org.eclipse.jetty:jetty-server:11.0.15'
    testImplementation 'org.eclipse.jetty:jetty-servlet:11.0.15'
    testImplementation 'org.eclipse.jetty:jetty-webapp:11.0.15'
    testImplementation "org.apache.httpcomponents:httpclient:4.3.4"
    testImplementation "org.apache.httpcomponents:fluent-hc:4.3.4"
    testImplementation 'junit:junit:4.10'
	compileOnly 'org.slf4j:slf4j-simple:2.0.5'
	testImplementation 'org.slf4j:slf4j-simple:2.0.5'
}

test {
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}

task(console, dependsOn: 'classes', type: JavaExec) {
	main = 'groovy.ui.Console'
	classpath = sourceSets.main.runtimeClasspath
}

apply {
	from rootProject.layout.projectDirectory.file('gradle/publish-config.gradle')
}