group = 'cloud.wondrify'

apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: "org.apache.grails.gradle.grails-plugin"

ext {
    pomDescription = 'The Grails Asset-Pipeling plugin providing asset transpiling to grails.'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = "https://repo.grails.org/grails/core" }
    maven { url = 'https://repository.apache.org/content/groups/snapshots' }
}

configurations.configureEach {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if ((details.requested.group == 'org.codehaus.groovy' || details.requested.group == 'org.apache.groovy') && details.requested.name != 'groovy-bom') {
            details.useTarget(group: 'org.apache.groovy', name: details.requested.name, version: "$groovy4Version")
            details.because "The dependency coordinates are changed in Apache Groovy 4, plus ensure version"
        }
    }
}

grails {
    packageAssets = false
}

dependencies {

    implementation platform("org.apache.grails:grails-bom:$grailsVersion")

    implementation project(':asset-pipeline-core')
    implementation 'org.apache.grails:grails-url-mappings'

    compileOnly 'com.github.ben-manes.caffeine:caffeine' // Cache
    compileOnly 'jakarta.servlet:jakarta.servlet-api' // Provided by the servlet container
    compileOnly 'org.apache.grails:grails-core' // Provided as this is a Grails plugin
    compileOnly 'org.apache.grails.views:grails-web-taglib' // For taglib compilation

    testImplementation 'org.apache.grails:grails-testing-support-web'
    testImplementation 'org.spockframework:spock-core'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events('passed', 'skipped', 'failed')
    }
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
}

apply {
    from rootProject.layout.projectDirectory.file('gradle/java-config.gradle')
    from rootProject.layout.projectDirectory.file('gradle/publish-config.gradle')
}