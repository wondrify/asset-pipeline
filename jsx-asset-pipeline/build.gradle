buildscript {
    repositories {
        // mavenLocal()
        mavenCentral()
        maven {
            url "https://xbib.org/repository"
        }
    }
    dependencies {
        classpath 'org.xbib.gradle.plugin:gradle-plugin-jflex:1.1.0'
    }
}

apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: 'org.xbib.gradle.plugin.jflex'

group = 'cloud.wondrify'

ext {
    pomDescription = 'JSX Transpiler Extension for the JVM Based Asset-Pipeline.'
}

configurations {
    provided
}
sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

dependencies {

    api project(':asset-pipeline-core')

    // Needs to be compiled with Groovy 3 as it is used by the Gradle Plugin
    compileOnly "org.codehaus.groovy:groovy:$groovy3Version"
    compileOnly "org.graalvm.polyglot:polyglot:$graalvmVersion"

    testImplementation "org.apache.groovy:groovy:$groovy4Version"
    testImplementation "org.graalvm.js:js-community:$graalvmVersion"
    testImplementation "org.spockframework:spock-core:$spockVersion"
}

task(console, dependsOn: 'classes', type: JavaExec) {
  main = 'groovy.ui.Console'
  classpath = sourceSets.main.runtimeClasspath
}

test {
    useJUnitPlatform()
    testLogging {
        events('passed', 'skipped', 'failed')
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

apply {
    from rootProject.layout.projectDirectory.file('gradle/java-config.gradle')
    from rootProject.layout.projectDirectory.file('gradle/publish-config.gradle')
}

tasks.named('sourcesJar', Jar).configure {
    it.dependsOn(jflex)
}

tasks.named('javadocJar', Jar).configure { Jar it ->
    // TODO: help-doc.html is a duplicate
    it.duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}