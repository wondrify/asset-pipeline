buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
	}
}

apply plugin: 'groovy'
apply plugin: 'java-library'

group = 'cloud.wondrify'
sourceCompatibility = '1.17'
targetCompatibility = '1.17'

ext {
	pomDescription = 'JVM Asset Pipeline Spring Boot Adapter.'
}

configurations {
	provided
	doc.extendsFrom(runtime)
}

sourceSets {
	main {
		compileClasspath += configurations.provided
		groovy.srcDirs   += ['src/main/java']
		java.srcDirs      = []
	}
}

java {
    withSourcesJar()
    withJavadocJar()
}

repositories {
	mavenCentral()
	mavenLocal()
	mavenCentral()
}

dependencies {
	compileOnly    'org.codehaus.groovy:groovy:2.4.19'
	api     project(':asset-pipeline-core')
	api     project(':asset-pipeline-servlet')
	api     'org.springframework.boot:spring-boot-starter-web:3.0.0'
	testImplementation 'org.spockframework:spock-core:1.3-groovy-2.4'
	// compileOnly "org.slf4j:log4j-over-slf4j:1.7.28"
}

task(console, dependsOn: 'classes', type: JavaExec) {
	main = 'groovy.ui.Console'
	classpath = sourceSets.main.runtimeClasspath
}

test {
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}

apply {
	from rootProject.layout.projectDirectory.file('gradle/publish-config.gradle')
}